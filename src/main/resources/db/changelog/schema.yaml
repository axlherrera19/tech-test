databaseChangeLog:

  - changeSet:
      id: create-matcher-table-1
      author: aherrera
      changes:
        ## Create Matcher table
        - createTable:
            tableName: matcher
            columns:
              - column:
                  name: id
                  type: BIGINT
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: min
                  type: INT
              - column:
                  name: max
                  type: INT
              - column:
                  name: country
                  type: VARCHAR(255)
              - column:
                  name: has_items
                  type: VARCHAR(255)
              - column:
                  name: does_not_have_items 
                  type: VARCHAR(255)

  - changeSet:
      ## Create Matcher table
      id: create-campaign-table-1
      author: aherrera
      changes:
        - createTable:
            tableName: campaign
            columns:
              - column:
                  name: id
                  type: BIGINT
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: game
                  type: VARCHAR(255)
                  constraints:
                    nullable: false
              - column:
                  name: name
                  type: VARCHAR(255)
                  constraints:
                    nullable: false
              - column:
                  name: priority
                  type: DOUBLE
              - column:
                  ## FK with Matcher
                  name: matcher_id
                  type: BIGINT
                  constraints:
                    nullable: false
              - column:
                  name: start_date
                  type: TIMESTAMP 
              - column:
                  name: end_date
                  type: TIMESTAMP 
              - column:
                  name: enabled
                  type: BOOLEAN
              - column:
                  name: last_updated
                  type: TIMESTAMP 

        - addForeignKeyConstraint:
            baseTableName: campaign
            baseColumnNames: matcher_id
            referencedTableName: matcher
            referencedColumnNames: id
            constraintName: fk_campaign_matcher
            onDelete: SET NULL

  - changeSet:
      id: create-player-profile-table-1
      author: aherrera # Replace with your name or identifier
      changes:
        - createTable:
            tableName: player_profile
            columns:
              - column:
                  name: player_id # Primary key, UUID in Java
                  type: UUID # Use UUID type in Liquibase for UUIDs
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: credential
                  type: VARCHAR(255)
              - column:
                  name: created_at # Maps from created
                  type: TIMESTAMP
              - column:
                  name: modified_at # Maps from modified
                  type: TIMESTAMP
              - column:
                  name: last_session
                  type: TIMESTAMP
              - column:
                  name: total_spent
                  type: DOUBLE # Or DECIMAL(10, 2) for currency, as mentioned before
              - column:
                  name: total_refund
                  type: DOUBLE # Or DECIMAL(10, 2)
              - column:
                  name: total_transactions
                  type: INT
              - column:
                  name: last_purchase
                  type: TIMESTAMP
              - column:
                  name: inventory
                  type: TEXT
                  constraints:
                    nullable: true
              - column:
                  name: level
                  type: INT
              - column:
                  name: xp
                  type: INT
              - column:
                  name: total_playtime
                  type: INT
              - column:
                  name: country
                  type: VARCHAR(2) # Assuming 2-letter country code (e.g., "CA")
              - column:
                  name: language
                  type: VARCHAR(10) # Adjust size as needed (e.g., "fr")
              - column:
                  name: birth_date # Maps from birthdate
                  type: TIMESTAMP
              - column:
                  name: gender
                  type: VARCHAR(50) # "male", "female", etc.

              - column:
                  name: custom_field # Maps from _customfield
                  type: VARCHAR(255)

              # clan_id column will be added as a foreign key here for the @OneToOne relationship
              # This assumes PlayerProfile is the owning side
              - column:
                  name: clan_id
                  type: VARCHAR(255) # Must match the type of clan.id
                  constraints:
                    nullable: true # As PlayerProfile doesn't strictly require a Clan (depending on your logic)

  - changeSet:
      id: create-device-table-1
      author: aherrera
      changes:
        - createTable:
            tableName: device
            columns:
              - column:
                  name: id
                  type: BIGINT
                  autoIncrement: true
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: model
                  type: VARCHAR(255)
              - column:
                  name: carrier
                  type: VARCHAR(255)
              - column:
                  name: firmware
                  type: VARCHAR(255)
              - column:
                  name: player_id # Foreign key to player_profile table
                  type: UUID # Must match type of player_profile.player_id
                  constraints:
                    nullable: false # Assuming a device must always belong to a player

        # Add foreign key constraint from device to player_profile
        - addForeignKeyConstraint:
            baseTableName: device
            baseColumnNames: player_id
            referencedTableName: player_profile
            referencedColumnNames: player_id
            constraintName: fk_device_player_profile
            onDelete: CASCADE # If a player is deleted, their devices are deleted.

  - changeSet:
      id: create-clan-table-1
      author: aherrera
      changes:
        - createTable:
            tableName: clan # Table for the Clan entity
            columns:
              - column:
                  name: id # Clan ID from JSON, treated as String
                  type: VARCHAR(255)
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: name
                  type: VARCHAR(255)
                  constraints:
                    nullable: false

  # Add foreign key for activeCampaigns in the existing 'campaign' table
  # This changeSet should be placed logically where it makes sense,
  # potentially in the '00-create-schema.yaml' where campaign table is created,
  # or here if the campaign table already exists.
  - changeSet:
      id: add-fk-campaign-player-profile-1
      author: aherrera
      changes:
        - addColumn: # Add the foreign key column to the existing campaign table
            tableName: campaign
            columns:
              - column:
                  name: player_profile_id # Name of the column as per @JoinColumn
                  type: UUID # Must match type of player_profile.player_id
                  constraints:
                    nullable: true # Assuming campaigns don't always need a player profile
        - addForeignKeyConstraint:
            baseTableName: campaign
            baseColumnNames: player_profile_id
            referencedTableName: player_profile
            referencedColumnNames: player_id
            constraintName: fk_campaign_player_profile
            onDelete: SET NULL # If a player profile is deleted, player_profile_id in campaign becomes NULL.

  # Add foreign key constraint from player_profile to clan
  - changeSet:
      id: add-fk-player-profile-clan-1
      author: aherrera
      changes:
        - addForeignKeyConstraint:
            baseTableName: player_profile
            baseColumnNames: clan_id
            referencedTableName: clan
            referencedColumnNames: id # PK of the Clan table
            constraintName: fk_player_profile_clan
            onDelete: SET NULL # If clan is deleted, player's clan_id becomes NULL
            # Or RESTRICT/NO ACTION if a player cannot exist without a clan.